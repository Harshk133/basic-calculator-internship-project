/* This is for all elements on the html web page after and before; There styling goes like this... */
*, *::before, *::after{
    box-sizing: border-box;
    font-family: 'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif;
    font-weight: normal;
}

/* web page body with margin and padding to zero also background with a very nice linear gradient color as you see below... */
body{
    margin: 0;
    padding: 0;
    background: linear-gradient(to right, #00AAFF, #00FF6C);
}

/* some stylign for calculator grid display grid is responsible for creating the grid layout of the calculator */
.calculator-grid{
    display: grid;
    justify-content: center;
    align-content: center;
    min-height: 100vh;
    grid-template-columns: repeat(4, 100px);
    grid-template-rows: minmax(120px, auto) repeat(5, 100px);
}

/* Styling of the button goes here... */
.calculator-grid > button{
    cursor: pointer;
    font-size: 2rem;
    border: 1px solid white;
    outline: none;
    background: rgba(255, 255, 255, 0.75);
}

/* Styling of hover button goes here... */
.calculator-grid > button:hover{
    background: rgba(255, 255, 255, 0.9);
}

/* Grid coloumn span 2 it spans for 2 boxes. */
.span-two{
    grid-column: span 2;
}


/* The grid column: 1 / -1 is used to span the output div by the total number of columns. This is a convenient way and efficient way when the programmer is unknown with the grid column structure or column numbers also it helps to make the system more dynamic!! */
.output{
    grid-column: 1 / -1;
    background-color: rgba(0, 0, 0, 0.75);
    display: flex;
    align-items: flex-end;
    justify-content: space-around;
    flex-direction: column;
    padding: 10px;
    word-wrap: break-word;
    word-break: break-all;
}

.output .previous-operand{
    color: rgba(255, 255, 255, 0.75);
    font-size: 1.5rem;
}

.output .current-operand{
    color: white;
    font-size: 2.5rem;
}

